# This workflow will build the project and deploy it to Google App Engine Standard when a release is created

name: Deploy to the staging environment's Google App Engine Standard

on:
  push:
    branches: [master]

# Environment variables available to all jobs and steps in this workflow
env:
  COOKIE_SESSION_KEY: ${{ secrets.STAGING_COOKIE_SESSION_KEY }}
  DISCORD_BOT_SECRET: ${{ secrets.STAGING_DISCORD_BOT_SECRET }}
  DISCORD_CLIENT_ID: ${{ secrets.STAGING_DISCORD_CLIENT_ID }}
  DISCORD_CLIENT_SECRET: ${{ secrets.STAGING_DISCORD_CLIENT_SECRET }}
  DISCORD_GUILD: 'buddy-reading-test'
  DISCORD_GUILD_ID: '589194387968491530'
  DISCORD_REDIRECT: 'https://buddyreading-staging-env.uc.r.appspot.com/api/auth/discord/callback'
  GAE_ENV: 'staging'
  GCLOUD_PROJECT: ${{ secrets.STAGING_GCLOUD_PROJECT }}
  GITHUB_SHA: ${{ github.sha }}
  MONGO_DB: ${{ secrets.STAGING_MONGO_DB }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  setup-build-deploy:
    name: Setup, Build, and Deploy to Staging
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # discord.js requires Node >= 12
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.STAGING_GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.STAGING_GOOGLE_SERVICE_ACCOUNT_KEY }}

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn build
      # Deploy the code to the Google App Engine Standard
      - name: Deploy
        run: |
          yarn create-env
          gcloud config set core/project $GCLOUD_PROJECT
          gcloud app deploy app.staging.yaml --promote
